import os
import sys
import logging
import numpy as np
from netCDF4 import Dataset
from gfs_utils import read_gfs_times

def read_tcrmw(trackfile):
    """
    Read netcdf file generated by the TCRMW tool.
    """

    try:
        file_id = Dataset(trackfile, 'r')
        logging.info('reading ' + trackfile)
    except IOError:
        logging.error('failed to open ' + trackfile)
        sys.exit()

    valid_time = file_id.variables['valid_time'][:]
    lat_grid = file_id.variables['lat'][:]
    lon_grid = file_id.variables['lon'][:]

    logging.debug('lat_grid.shape=' + str(lat_grid.shape))
    logging.debug('lon_grid.shape=' + str(lon_grid.shape))

    grid_vars = set(['lat', 'lon', 'range', 'azimuth'])
    wind_vars = set(['U', 'V', 'UGRD', 'VGRD'])
    wind_data = {}
    scalar_data = {}

    for var in file_id.variables:
        logging.info(var)
        if var in wind_vars:
            wind_data[var] = file_id.variables[var][:]
        if var not in grid_vars.union(wind_vars):
            scalar_data[var] = file_id.variables[var][:]

    file_id.close()

    return valid_time, lat_grid, lon_grid, wind_data, scalar_data
